<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:fontAwesome="clr-namespace:FontAwesome"
             x:Class="FoldTheDishes.Views.ReminderDetailPage"
             xmlns:converters="clr-namespace:FoldTheDishes.Converters"
             xmlns:behaviors="clr-namespace:FoldTheDishes.Behaviors"
             Title="{Binding Title}"
             x:Name="ReminderDetail"
             Visual="Material">

    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:CompletedIconConverter x:Key="CompletedIconConverter"/>
            <converters:CompletedStringConverter x:Key="CompletedStringConverter"/>
            <converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
        </ResourceDictionary>
    </ContentPage.Resources>

    <ContentPage.ToolbarItems>
        <!--<ToolbarItem Command="{Binding CompleteCommand}">
            <ToolbarItem.IconImageSource>
                <FontImageSource Glyph="{Binding Path=BindingContext.Completed, Source={x:Reference Name=ReminderDetail}, Converter={StaticResource CompletedIconConverter}}"
                                 FontFamily="FA-R" Size="Medium" Color="{AppThemeBinding Dark={StaticResource PrimaryTextLight}, 
                        Light={StaticResource PrimaryTextDark}}"/>
            </ToolbarItem.IconImageSource>
        </ToolbarItem>-->
        <ToolbarItem Command="{Binding DeleteCommand}">
            <ToolbarItem.IconImageSource>
                <FontImageSource Glyph="{x:Static fontAwesome:FontAwesomeIcons.Trash}" FontFamily="FA-S" Size="Medium" Color="{AppThemeBinding Dark={StaticResource PrimaryTextLight}, 
                        Light={StaticResource PrimaryTextDark}}"/>
            </ToolbarItem.IconImageSource>
        </ToolbarItem>
    </ContentPage.ToolbarItems>

    <ContentPage.Content>
        <StackLayout Spacing="20" Padding="15">
            <StackLayout Orientation="Horizontal" HorizontalOptions="FillAndExpand">
                <Entry Text="{Binding TitleText, Mode=TwoWay}" Placeholder="Title" HorizontalOptions="FillAndExpand"
                       IsEnabled="{Binding Completed, Converter={StaticResource InverseBooleanConverter}}">
                    <Entry.Behaviors>
                        <behaviors:EntryNotEmptyValidation/>
                    </Entry.Behaviors>
                    <Entry.Keyboard>
                        <Keyboard x:FactoryMethod="Create">
                            <x:Arguments>
                                <KeyboardFlags>CapitalizeSentence</KeyboardFlags>
                            </x:Arguments>
                        </Keyboard>
                    </Entry.Keyboard>
                </Entry>
                <Frame HorizontalOptions="End" CornerRadius="5" Padding="0" BackgroundColor="{AppThemeBinding Dark={StaticResource SecondaryBackgroundDark},
                                Light={StaticResource SecondaryBackgroundLight}}" BorderColor="{AppThemeBinding Dark={StaticResource PrimaryBackgroundDark},
                                Light={StaticResource SecondaryTextDark}}">
                    <Grid RowDefinitions="30, 35" RowSpacing="0" HorizontalOptions="End" BackgroundColor="{AppThemeBinding Dark={StaticResource SecondaryBackgroundDark},
                                Light={StaticResource SecondaryBackgroundLight}}">
                        <CheckBox Grid.Row="1" Margin="6, -10, 0, 0" HorizontalOptions="Center" IsChecked="{Binding Completed, Mode=TwoWay}"/>
                        <Label Text="{Binding Completed, Converter={StaticResource CompletedStringConverter}}"
                               Grid.Row="0"
                               Margin="12, 10, 0, 0"
                               FontSize="11"/>
                    </Grid>
                </Frame>
            </StackLayout>
            <Editor Text="{Binding Notes, Mode=TwoWay}" Placeholder="Notes" IsEnabled="{Binding Completed, Converter={StaticResource InverseBooleanConverter}}">
                <Editor.Keyboard>
                    <Keyboard x:FactoryMethod="Create">
                        <x:Arguments>
                            <KeyboardFlags>CapitalizeSentence</KeyboardFlags>
                        </x:Arguments>
                    </Keyboard>
                </Editor.Keyboard>
            </Editor>
            <StackLayout Orientation="Horizontal">
                <Grid RowDefinitions="30, 35" Margin="0" RowSpacing="0" HorizontalOptions="FillAndExpand">
                    <DatePicker x:Name="DatePicker" IsEnabled="{Binding Completed, Converter={StaticResource InverseBooleanConverter}}"
                                Date="{Binding DueDate, Mode=TwoWay}"
                                Format="MMMM dd, yyyy"
                                Grid.Row="1"
                                Margin="0, -30, 0, 0" HorizontalOptions="FillAndExpand">
                        <DatePicker.Behaviors>
                            <behaviors:DateValidationBehavior DateLabel="{x:Reference DateLabel}" TimeLabel="{x:Reference TimeLabel}" TimePicker="{x:Reference TimePicker}"/>
                        </DatePicker.Behaviors>
                    </DatePicker>
                    <Label x:Name="DateLabel"
                           Text="Date"
                           Grid.Row="0"
                           Margin="12, 10, 0, 0"
                           FontSize="11"/>
                </Grid>
                <Grid RowDefinitions="30, 35" Margin="0" RowSpacing="0" HorizontalOptions="FillAndExpand">
                    <TimePicker x:Name="TimePicker" Time="{Binding DueTime, Mode=TwoWay}" IsEnabled="{Binding Completed, Converter={StaticResource InverseBooleanConverter}}"
                                Grid.Row="1"
                                Margin="0, -30, 0, 0"
                                HorizontalOptions="FillAndExpand">
                        <TimePicker.Behaviors>
                            <behaviors:TimeValidationBehavior DateLabel="{x:Reference DateLabel}" TimeLabel="{x:Reference TimeLabel}" DatePicker="{x:Reference DatePicker}"/>
                        </TimePicker.Behaviors>
                    </TimePicker>
                    <Label x:Name="TimeLabel"
                           Text="Time"
                           Grid.Row="0"
                           Margin="12, 10, 0, 0"
                           FontSize="11"/>
                </Grid>
            </StackLayout>
            <Button Text="Save" Command="{Binding SaveCommand}" HorizontalOptions="FillAndExpand" IsEnabled="{Binding CanSave}"></Button>
        </StackLayout>
    </ContentPage.Content>
</ContentPage>